{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","console","log","barFillHeight","maxValue","Math","round","style","backgroundColor","height","label","Chart","dataPointValue","dataPoints","dataPoint","totalMaximum","max","ExpenseChart","charDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","item","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseDate","Date","onExpenseSaveData","type","min","step","onClick","onStopEditingHandler","NewExpense","prop","isEditing","setIsEditing","expData","expenseData","random","onAddExpense","DUMMY_EXPENSE","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47f0ce8b.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nexport const Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nexport const ExpenseFilter = (props) => {\r\n  const filterHandler = (e) => {\r\n    props.onChangeFilter(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./ExpenseDate.css\";\r\nexport const ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n    </div>\r\n  );\r\n};\r\n","import './ExpenseItem.css';\r\nimport { ExpenseDate } from './ExpenseDate';\r\nimport { Card } from '../UI/Card';\r\n\r\nexport const ExpenseItem = props => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n","import './ExpensesList.css';\r\nimport { ExpenseItem } from './ExpenseItem';\r\n\r\nexport const ExpensesList = props => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map(expense => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import './ChartBar.css';\r\n\r\nexport const ChartBar = props => {\r\n  console.log(props);\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = `${Math.round((props.value / props.maxValue) * 100)}%`;\r\n  }\r\n  console.log(barFillHeight);\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ backgroundColor: 'blue', height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n","import './Chart.css';\r\nimport { ChartBar } from './ChartBar';\r\n\r\nexport const Chart = props => {\r\n  console.log(props);\r\n  const dataPointValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  let totalMaximum = Math.max(...dataPointValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map(dataPoint => {\r\n        return (\r\n          <ChartBar\r\n            label={dataPoint.label}\r\n            maxValue={totalMaximum}\r\n            value={dataPoint.value}\r\n            key={dataPoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import { Chart } from '../Chart/Chart';\r\n\r\nexport const ExpenseChart = props => {\r\n  console.log(props);\r\n  const charDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Fed', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    charDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={charDataPoints} />;\r\n  // return null;\r\n};\r\n","import './Expenses.css';\r\nimport { Card } from '../UI/Card';\r\nimport { ExpenseFilter } from './ExpenseFilter';\r\nimport React, { useState } from 'react';\r\nimport { ExpensesList } from './ExpensesList';\r\nimport { ExpenseChart } from './ExpenseChart';\r\n\r\nexport const Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const changeFilter = year => {\r\n    setFilteredYear(year);\r\n  };\r\n\r\n  const filteredExpenses = props.item.filter(item => {\r\n    return item.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter selected={filteredYear} onChangeFilter={changeFilter} />\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n","import './ExpenseForm.css';\r\nimport React, { useState } from 'react';\r\n\r\nexport const ExpenseForm = props => {\r\n  console.log(props);\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const handlerTitleChange = e => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n\r\n  const handlerAmountChange = e => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n\r\n  const handlerDateChange = e => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const handerSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const expenseDate = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onExpenseSaveData(expenseDate);\r\n    setEnteredDate('');\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handerSubmit}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Titile</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={handlerTitleChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={handlerAmountChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={handlerDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={props.onStopEditingHandler}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add to Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import { ExpenseForm } from './ExpenseForm';\r\nimport './NewExpense.css';\r\nimport { useState } from 'react';\r\n\r\nexport const NewExpense = prop => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const ExpenseSaveDateHandler = expData => {\r\n    const expenseData = {\r\n      ...expData,\r\n      id: Math.random().toString(),\r\n    };\r\n    prop.onAddExpense(expenseData);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onExpenseSaveData={ExpenseSaveDateHandler}\r\n          onStopEditingHandler={stopEditingHandler}\r\n        ></ExpenseForm>\r\n      )}\r\n      {!isEditing && <button onClick={startEditingHandler}>Add Expense</button>}\r\n    </div>\r\n  );\r\n};\r\n","import { Expenses } from './components/Expenses/Expenses';\nimport { NewExpense } from './components/NewExpense/NewExpense.js';\nimport React, { useState } from 'react';\n\nconst DUMMY_EXPENSE = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport const App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSE);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpense => [expense, ...prevExpense]);\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses item={expenses} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}